If you are going to be a computer professional, there are both practical and theoretical reasons to study algorithms. From a practical standpoint, 
you have to know a standard set of important algorithms from different areas of computing; in addition, you should be able to
design new algorithms and analyze their efficiency. From the theoretical standpoint, the study of algorithms, sometimes called algorithmics,
has come to be recognized as the cornerstone of computer science. David Harel, in his delightful book pointedly titled Algorithmics:
the Spirit of Computing, put it as follows: Algorithmics is more than a branch of computer science. It is the core of
computer science, and, in all fairness, can be said to be relevant to most of science, business, and technology. 
But even if you are not a student in a computing-related program, there are compelling reasons to study algorithms. To put it bluntly, computer programs
would not exist without algorithms. And with computer applications becoming indispensable in almost all aspects of our professional and personal lives,
studying algorithms becomes a necessity for more and more people.
Another reason for studying algorithms is their usefulness in developing analytical skills. After all, algorithms can be seen as special kinds of solutions
to problemsâ€”not just answers but precisely defined procedures for getting answers. Consequently, sspecific algorithm design techniques can be
interpreted as problem solving strategies that can be useful regardless of whether a computer is involved. Of course, the precision inherently
imposed by algorithmic thinking limits the kinds of problems that can be solved with an algorithm. You will not find, for
example, an algorithm for living a happy life or becoming rich and famous.